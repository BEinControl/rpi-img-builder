#!/usr/bin/env bash
set -e

#
# NOTE: This script is run within the chroot after second stage debootstrap!
#

# Make sure we are chrooted
if [ "$(stat -c %d:%i /)" = "$(stat -c %d:%i /proc/1/root/.)" ]; then
	echo "Something went wrong and we aren't in a chroot, to save your system from damage the script will fail and exit now."
	exit 1;
fi

if [ "$#" -lt 8 ]; then
	echo "Usage: $0 DIST ARCH LOCALE TZONE UNAME UPASS RPASS INC_REC UBOOT_DIR"
	exit 1
fi

DIST=$1
ARCH=$2
LOCALE=$3
TZONE=$4
UNAME=$5
UPASS=$6
RPASS=$7
INC_REC=$8
UBOOT_DIR=$9

echo "Running postinstall script..."

# Sanitize environnement
LC_ALL=C
LANG=C

# Make dpkg/apt-get noninteractive
export DEBIAN_FRONTEND=noninteractive
export DEBCONF_NONINTERACTIVE_SEEN=true
export LC_ALL=C LANGUAGE=C LANG=C
export FLASH_KERNEL_SKIP=1
export RIB_DIST=${DIST}
if [ "${UBOOT_DIR}" = "rpi_3" ]; then
	export FK_MACHINE="Raspberry Pi 3 Model B"
else
	export FK_MACHINE="Raspberry Pi 2 Model B"
fi

# Prevent apt-get from starting services
echo "#!/bin/sh
exit 101
" > /usr/sbin/policy-rc.d
chmod +x /usr/sbin/policy-rc.d

# Set the locale
echo "LANG=${LOCALE}" >> /etc/default/locale
echo "locales locales/default_environment_locale select ${LOCALE}" | debconf-set-selections
echo "locales locales/locales_to_be_generated select ${LOCALE} UTF-8" | debconf-set-selections

# Set the timezone
# NOTE: tzdata should pick this up when it activates.  If not, see below
echo "${TZONE}" > /etc/timezone

# Finish multistrap
/var/lib/dpkg/info/base-passwd.preinst install
/var/lib/dpkg/info/dash.preinst        install
dpkg --force-all --configure debconf 2>/dev/null || true
dpkg --force-all --configure mawk    2>/dev/null || true
dpkg --configure -a

# Make sure all apt keys are installed
echo "Installing apt keys"
pushd /apt-keys > /dev/null
for i in *.asc; do
	if [ -f $i ]; then
		echo -n " - Adding apt key: '${i}' ... "
		apt-key --keyring /etc/apt/trusted.gpg.d/${i%.*}.gpg add ${i} || echo "\n"
	fi
done
popd > /dev/null

# Set root password
echo "root:${RPASS}" | chpasswd

# Add user $UNAME
useradd -m ${UNAME} -s /bin/bash

# Set $UNAME password
echo "${UNAME}:${UPASS}" | chpasswd

# Add $UNAME to groups
adduser ${UNAME} sudo  || true
adduser ${UNAME} audio || true
adduser ${UNAME} video || true
adduser ${UNAME} input || true
adduser ${UNAME} tty   || true

# Initialize /etc/apt/sources.list (remove multistrap from the filenames)
# DFARRELL - Added 500-* prefix to help manage repo priority
for i in /etc/apt/sources.list.d/multistrap-*; do
	mv $i $(dirname $i)/500-$(echo $i | cut -d"-" -f2);
done

# DFARRELL -  Removed '--force-yes', added "--allow-unauthenticated"
APT_INSTALL_OPTS="-y --allow-unauthenticated"
if [ "$INC_REC" == "0" ]; then
	APT_INSTALL_OPTS="$APT_INSTALL_OPTS --no-install-recommends"
fi

# Bring in package list from existing repos (needed here to install dpkg-dev)
apt-get update

# Setup local package-cache repos
apt-get $APT_INSTALL_OPTS --no-install-recommends install dpkg-dev
pushd /package-cache-plugins/ >/dev/null && ( dpkg-scanpackages . | gzip > Packages.gz ) && popd >/dev/null
pushd /package-cache-common/  >/dev/null && ( dpkg-scanpackages . | gzip > Packages.gz ) && popd >/dev/null
echo "deb [trusted=yes] file:/package-cache-plugins /" > /etc/apt/sources.list.d/000-rpi-img-builder-plugins.list
echo "deb [trusted=yes] file:/package-cache-common /"  > /etc/apt/sources.list.d/001-rpi-img-builder-common.list
apt-get update -o Dir::Etc::sourcelist=sources.list.d/000-rpi-img-builder-plugins.list -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
apt-get update -o Dir::Etc::sourcelist=sources.list.d/001-rpi-img-builder-common.list  -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
apt-get -y remove dpkg-dev

# Install extra packages
if [ -f /packages.txt ]; then
	apt-get $APT_INSTALL_OPTS install $(cat /packages.txt);
fi

# Copy plugin post-install files
pushd /postinst-files >/dev/null
find . -type f ! -name '*~' -exec cp --preserve=mode,timestamps --parents {} / \;
popd >/dev/null

# Run plugin post-install scripts
if [ -d /postinst ]; then
	echo "Running custom postinst scripts"
	for i in `find /postinst -maxdepth 1 -type f -executable -not -name "*~" | sort`; do
		echo "  Running $i"
		$i ${UNAME} ${UBOOT_DIR}
	done
else
	echo "No custom postinst scripts found"
fi

# Run distribution post-install scripts
if [ -d /postinst/${DIST} ]; then
	echo "Running custom ${DIST} postinst scripts"
	for i in `find /postinst/${DIST} -maxdepth 1 -type f -executable -not -name "*~"`; do
		echo "  Running $i"
		$i
	done
else
	echo "No custom ${DIST} postinst scripts found"
fi

# If hostname set, add to hosts
if [ -f /etc/hostname ]; then
	if ! grep "^127.0.0.1\s*$(cat /etc/hostname)\s*" /etc/hosts > /dev/null; then
		sed -i "1i 127.0.0.1\\t$(cat /etc/hostname)" /etc/hosts;
	fi;
fi

# DFARRELL - Should not be needed, but here in case I'm wrong
# Finish timezone setup
#dpkg-reconfigure --frontend noninteractive tzdata

# Re-enable services to start
rm -f /usr/sbin/policy-rc.d

# Cleanup
echo "Running clean up"

# DFARRELL - autoclean appears to be redundant when also doing clean
#apt-get autoclean
# DFARRELL - Added autoremove
apt-get     \
	-y      \
	--purge \
	-o APT::Autoremove::RecommendsImportant=0 \
	-o APT::Autoremove::SuggestsImportant=0   \
	autoremove
apt-get clean
dpkg --clear-avail

# DFARRELL - Disabled removal of /etc/hostname as it prevents creation of static hostnames
#rm -f /etc/hostname

rm -f /etc/ssh/ssh_host_*

rm -f /etc/apt/apt.conf.d/00rpi-img-builder
rm -f /etc/apt/sources.list.d/*rpi-img-builder*.list

# Clean /tmp/
echo "Cleaning /tmp"
RESET_DOTGLOB=$(shopt -p dotglob || true)
shopt -s dotglob
rm -rf /tmp/*
$RESET_DOTGLOB
